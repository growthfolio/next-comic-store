// prisma/schema.prisma
datasource db {
  provider = "sqlite"
  url      = "file:../data/database.sqlite" // Path relative to schema file
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String   // Store hashed passwords in production
  isAdmin   Boolean  @default(false)
  orders    Order[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  price       Float
  imageUrl    String
  type        String   // e.g., "sample", "custom_base"
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  orderItems  OrderItem[] // Relation to OrderItem
}

model Order {
  id              Int      @id @default(autoincrement())
  userId          Int
  user            User     @relation(fields: [userId], references: [id])
  customerName    String?  // Store customer name at time of order
  totalPrice      Float
  status          String   @default("Pending") // e.g., Pending, Paid, In Production, Completed, Cancelled, Failed
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  items           OrderItem[] // Relation to OrderItem
  // Removed direct customImageUrl and notes from Order - now in OrderItem
  customImageUrl String? // Can be removed if always retrieved via items
  notes          String? // Can be removed if always retrieved via items
}

// New model to represent items within an order
model OrderItem {
  id          Int      @id @default(autoincrement())
  orderId     Int
  order       Order    @relation(fields: [orderId], references: [id])
  productId   Int?     // Link to a standard Product (optional)
  product     Product? @relation(fields: [productId], references: [id])

  // Details stored at the time of order
  title       String   // Title of the item (can be Product title or custom title)
  price       Float    // Price per item at time of order
  quantity    Int
  imageUrl    String?  // Image URL (Product image or custom uploaded image)
  isCustom    Boolean  @default(false) // Flag for custom items
  notes       String?  // Notes specific to this custom item

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([orderId])
  @@index([productId])
}
