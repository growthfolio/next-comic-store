// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  // Add "native" to allow Prisma to detect the OS and use a compatible engine
  // Keep the original target as a fallback.
  binaryTargets = ["native", "debian-openssl-1.1.x"]
}

datasource db {
  provider = "sqlite"
  url      = "file:../data/database.sqlite" // Changed path to point to /data folder
}


// User Model
model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String   // Storing plain text password for now (INSECURE)
  isAdmin   Boolean  @default(false)
  orders    Order[]  // Relation to Order model
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Product Model (for Comic Samples)
model Product {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  price       Float
  imageUrl    String
  type        String   // e.g., "sample"
  orders      Order[] // Relation to Order model (for orders containing this product)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Order Model
model Order {
  id             Int       @id @default(autoincrement())
  userId         Int
  user           User      @relation(fields: [userId], references: [id])
  // productId is nullable if the order is purely custom or contains only custom items initially
  productId      Int?
  product        Product?  @relation(fields: [productId], references: [id])
  // Store items as JSON string - more flexible for mixed sample/custom orders
  itemsJson      String
  totalPrice     Float
  // Fields specific to custom orders can still be here for quick access/filtering
  customImageUrl String?
  notes          String?
  status         String    @default("Pending") // e.g., Pending, In Production, Completed, Cancelled
  customerName   String? // Store customer name at time of order
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt

  // Add index for faster user order lookups
  @@index([userId])
}
